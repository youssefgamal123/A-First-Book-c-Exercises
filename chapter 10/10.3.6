void Time::tick(){

	if (minutes != 60 && seconds == 60) {
		minutes++;
		seconds = 1;

	}
	else if (minutes == 60 && seconds == 60){

		hours++;
		seconds = 1;
		minutes = 1;

	}
	else if (seconds < 60 && minutes != 60){
     	seconds++;
	}
	cout << hours << ':' << minutes << ':' << seconds << endl;
}


b. Modify the Time class written for Exercise 6a to include a detick() method that decrements
the time by one second. Test your method to ensure that it decrements time into a
prior hour and into a prior minute correctly.

void Time::detick(){

	if (minutes != 1 && seconds == 1) {

		minutes--;

		seconds = 59;

	}

	else if (minutes == 1 && seconds == 1){

		--hours;
		seconds = 59;
		minutes = 59;

	}
	else if (seconds < 60 && minutes != 60){
		seconds--;

	}

	cout << hours<< ':' << minutes << ':' << seconds << endl;

}
