dynamic allocation of memory, in which the amount of storage to be allocated is assigned, as requested, at runtime
instead of being fixed at compile time. Dynamic allocation of memory is useful when dealing
with lists and objects because it allows expanding the list as new items are added and contracting
the list as items are deleted.

B)

After an object has been dynamically created, it can be accessed only by using the address
the new operator returns. So like the this pointer, the newly created objectâ€™s address must be
stored in a pointer variable



C)

deleting an object after using it and not needing it anymore is very important in saving space in memory and if the deletion of the object is neglected
program might crash because of the running out of space in memory .





2)

A pointer is basically a variable that holds address of something in memory


i. Checkout *a;
declares a as the pointer that can store the address
The data type of the object Checkout when dereferenced is a string.

ii. Pump *pointer1;
declares pointer1 as the pointer that can store the address
The data type of the object Pump when dereferenced is a string.

iii. Pump *addr_of_aPump;
declares addr_of_aPump as the pointer that can store the address
The data type of the object Pump when dereferenced is a string.

iv. int *addr_of_int;
declares addr_of_int as the pointer that can store the address
The data type of the object int when dereferenced is a interger.

v. double *b;
declares b as the pointer that can store the address
The data type of the object double when dereferenced is a double-precision interger.

c. If the asterisks were removed from the declarations in Exercise 2b, what would the names
before the semicolon represent?

The name would be a variable that stores a value and not an address.
